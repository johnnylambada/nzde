#!/usr/bin/env node
var https=require('https');
var optimist = require('optimist');

var argv=optimist
    .usage("nozbe (GTD) from the command line", {
        'projects': { short: 'p', boolean: true, description: "Display all projects" },
        'contexts': { short: 'c', boolean: true, description: "Display all contexts" },
        'actions':  { short: 'a', boolean: true, description: "Display all next actions" }})
    .alias('p','projects')
    .alias('c','contexts')
    .alias('a','actions')
    .argv;

function nozbe(command, onend ){
    var opt = {
        host: 'webapp.nozbe.com',
        port: 443,
        path: "/api/"+command+"/key-"+process.env.NOZBE_API_KEY
    };
    var req = https.get(opt, function(response) {
      // handle the response
      var ans = '';
      response.on('data', function(chunk) {
          ans += chunk;
      });
      response.on('end', function(){
          var obj = JSON.parse(ans);
          onend(obj);
      });
    });
    req.on('error', function(e) {
      console.log("Got error: " + e.message);
    });
}

function projects() {
    nozbe('projects', function(obj) {
        for(var i=0; i<obj.length; i++){
            proj = obj[i];
            console.log(i + ': ' + proj.name + "("+proj.count+")");
        }
    });
}

function contexts() {
    nozbe('contexts', function(obj) {
        for(var i=0; i<obj.length; i++){
            context = obj[i];
            console.log(i + ': ' + context.name + "("+context.count+")");
        }
    });
}

function actions(){
    nozbe('actions/what-next', function(obj) {
        for(var i=0; i<obj.length; i++){
            action = obj[i];
            if (action.done==0){
                console.log(i + ': ' + action.name );
            }
        }
    });
}

//console.dir(argv);

if (argv.projects)       projects();
else if (argv.contexts)  contexts();
else if (argv.actions)   actions();
else                     optimist.showHelp();
